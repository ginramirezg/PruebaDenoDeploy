/** @jsx h */
import { h } from "preact";
import { Handlers, PageProps } from "$fresh/server.ts";

interface Contact {
  id: string;
  name: string;
}

interface Message {
  id: string;
  content: string;
  isContactMessage: boolean;
}

interface Data {
  contacts: Contact[];
  selected?: Contact;
  messages: Message[];
}

export const handler: Handlers<Data> = {
  async GET(req, ctx) {
    const url = new URL(req.url);
    const contactId = url.searchParams.get("id");

    const contactsRes = await fetch("https://back-a-p4.onrender.com/contacts");
    const contacts: Contact[] = await contactsRes.json();

    let selected: Contact | undefined;
    let messages: Message[] = [];

    if (contactId) {
      selected = contacts.find((c) => c.id === contactId);
      const messagesRes = await fetch(`https://back-a-p4.onrender.com/messages/${contactId}`);
      messages = await messagesRes.json();
    }

    return ctx.render({ contacts, selected, messages });
  },

  async POST(req) {
    const form = await req.formData();
    const content = form.get("content");
    const contactId = form.get("contactId");

    await fetch("https://back-a-p4.onrender.com/messages", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ contactId, content }),
    });

    return Response.redirect(`/main?id=${contactId}`, 303);
  },
};

export default function MainPage({ data }: PageProps<Data>) {
  return (
    <div style={{ display: "flex", height: "100vh", fontFamily: "Arial" }}>
      <div style={{ width: "20%", borderRight: "1px solid #ccc", overflowY: "auto" }}>
        <h3 style={{ padding: "10px" }}>Contactos</h3>
        {data.contacts.map((contact) => (
          <a
            key={contact.id}
            href={`/main?id=${contact.id}`}
            style={{ display: "block", padding: "10px", textDecoration: "none", color: "#333", borderBottom: "1px solid #eee" }}
          >
            {contact.name}
          </a>
        ))}
      </div>

      <div style={{ width: "80%", display: "flex", flexDirection: "column" }}>
        <div style={{ flex: 1, padding: "10px", overflowY: "auto" }}>
          {data.selected ? (
            data.messages.map((msg) => (
              <div
                key={msg.id}
                style={{
                  textAlign: msg.isContactMessage ? "left" : "right",
                  margin: "5px 0",
                }}
              >
                <span style={{ background: "#eee", padding: "8px", borderRadius: "10px", display: "inline-block" }}>
                  {msg.content}
                </span>
              </div>
            ))
          ) : (
            <p>Selecciona un contacto para ver mensajes</p>
          )}
        </div>

        {data.selected && (
          <form method="POST" style={{ display: "flex", padding: "10px", borderTop: "1px solid #ccc" }}>
            <input type="hidden" name="contactId" value={data.selected.id} />
            <input
              type="text"
              name="content"
              placeholder="Escribe un mensaje..."
              required
              style={{ flex: 1, padding: "10px" }}
            />
            <button type="submit" style={{ padding: "10px" }}>Enviar</button>
          </form>
        )}
      </div>
    </div>
  );
}